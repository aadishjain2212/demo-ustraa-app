{"version":3,"sources":["Environment/Environment.js","Categories/ProductList.js","Categories/Footer.js","Categories/CategoriesTabs.js","App.js","serviceWorker.js","index.js"],"names":["BaseAddress","ColorButton","withStyles","theme","root","color","palette","getContrastText","backgroundColor","Button","useStyles","makeStyles","card","display","margins","paddingBottom","details","flexDirection","content","flex","cardMedia","height","maxWidth","button","marginTop","borderRadius","rating","position","right","top","starIcon","fontSize","price","textDecoration","paddingTop","paddingLeft","ProductList","props","classes","data","name","img","image_urls","weight","unit","weight_unit","fp","final_price","iis","is_in_stock","Card","className","CardMedia","component","alt","image","x120","CardContent","Typography","variant","Grid","container","inline","disabled","disableElevation","textTransform","flexGrow","background","paper","width","Footer","React","useState","anchorEl","open","value","state","setState","Fragment","ButtonGroup","onClick","event","getAnchor","currentTarget","changeString","Popper","Tabs","orientation","onChange","newValue","changeCategory","category","map","Tab","key","category_id","id","label","category_name","changeView","viewString","tabs","tabsRoot","margin","borderBottom","tabsIndicator","visibility","tabRoot","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","fontFamily","join","opacity","renderTab","console","log","style","backgroundImage","backgroundSize","marginLeft","padding","title","CategoriesTabs","isLess","selectString","handleChange","a","async","categoryId","categoryName","target","innerText","fetch","json","then","useEffect","Object","entries","length","product_list","category_list","scrollButtons","indicator","category_image","selected","tabSelected","products","slice","newView","newString","App","response","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a83bbc31.chunk.js","sourcesContent":["export const BaseAddress = \"https://backend.ustraa.com/rest/V1/api\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(\"#73da4d\"),\n    backgroundColor: \"#73da4d\"\n  }\n}))(Button);\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: \"flex\"\n  },\n  margins: {\n    paddingBottom: 10\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  cardMedia: {\n    height: 120,\n    maxWidth: 120\n  },\n  button: {\n    display: \"block\",\n    marginTop: 5,\n    color: \"white\",\n    borderRadius: 0\n  },\n  rating: {\n    color: \"#9e9e9e\",\n    position: \"inherit\",\n    right: 0,\n    top: 5\n  },\n  starIcon: {\n    fontSize: 14\n  },\n  price: {\n    textDecoration: \"line-through\",\n    paddingTop: 7,\n    paddingLeft: 5\n  }\n}));\n\nexport default function ProductList(props) {\n  const classes = useStyles();\n  const {\n    name,\n    image_urls: img,\n    weight,\n    weight_unit: unit,\n    price,\n    final_price: fp,\n    rating,\n    is_in_stock: iis,\n    ...other\n  } = props.data;\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        component=\"img\"\n        alt=\"Image not Available\"\n        height=\"140\"\n        image={img.x120}\n      />\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography variant=\"subtitle1\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\n            {rating ? rating : 0}\n            <StarIcon className={classes.starIcon} />\n          </Typography>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {weight ? `(${weight} ${unit})` : \"\"}\n          </Typography>\n          <Grid container>\n            <Typography inline=\"true\" variant=\"h6\">\n              {`â‚¹ ${fp}`}\n            </Typography>\n            <Typography\n              inline=\"true\"\n              className={classes.price}\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              {`â‚¹ ${price}`}\n            </Typography>\n          </Grid>\n          <ColorButton\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={iis ? false : true}\n            disableElevation\n          >\n            {iis ? \"ADD TO CART\" : \"OUT OF STOCK\"}\n          </ColorButton>\n        </CardContent>\n      </div>\n    </Card>\n  );\n}\n\nProductList.propTypes = {\n  data: PropTypes.object.isRequired,\n  key: PropTypes.number.isRequired\n}","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { Tabs, Tab } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    textTransform: \"none\"\n  },\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    height: 300,\n    width: 150\n  }\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    anchorEl: null,\n    open: false,\n    value: 0\n  });\n\n  const changeCategory = event => {\n    const getAnchor = state.anchorEl ? null : event.currentTarget;\n    setState({ ...state, anchorEl: getAnchor, open: true });\n  };\n\n  const handleClick = () => {\n    props.changeView();\n  };\n\n  const handleChange = (event, newValue) => {\n    props.changeCategory(event, newValue);\n    setState({ ...state, open: false, value: newValue });\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup variant=\"text\">\n        <Button onClick={changeCategory} className={classes.button}>\n          {`Showing for ${props.changeString}       change`}\n        </Button>\n        <Popper open={state.open} anchorEl={state.anchorEl}>\n          <div className={classes.root}>\n            <Tabs\n              orientation=\"vertical\"\n              variant=\"scrollable\"\n              onChange={handleChange}\n              value={state.value}\n            >\n              {props.category\n                ? props.category.map(value => {\n                    return (\n                      <Tab\n                        key={value.category_id}\n                        id={value.category_id}\n                        label={value.category_name}\n                      />\n                    );\n                  })\n                : \"\"}\n            </Tabs>\n          </div>\n        </Popper>\n        <Button onClick={handleClick} className={classes.button}>\n          {props.viewString}\n        </Button>\n      </ButtonGroup>\n    </React.Fragment>\n  );\n}\n\nFooter.propTypes = {\n  changeString: PropTypes.string.isRequired,\n  viewString: PropTypes.string.isRequired,\n  changeView: PropTypes.func.isRequired,\n  changeCategory: PropTypes.func.isRequired,\n  category: PropTypes.array.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ProductList from \"./ProductList\";\nimport Footer from \"./Footer\";\nimport { BaseAddress } from \"../Environment/Environment\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  tabs: {\n    borderRadius: 10\n  },\n  tabsRoot: {\n\t\tmargin: \"0\",\n\t\tborderBottom: \"1px solid #e8e8e8\"\n\t},\n\ttabsIndicator: {\n\t\tbackgroundColor: \"#fff\",\n\t\tvisibility: \"hidden\"\n\t},\n\ttabRoot: {\n\t\tcolor: \"#fff\",\n\t\ttextTransform: \"initial\",\n\t\tminWidth: 72,\n\t\tfontWeight: theme.typography.fontWeightRegular,\n\t\tmarginRight: theme.spacing.unit * 4,\n\t\tfontFamily: [\n\t\t\t\"-apple-system\",\n\t\t\t\"BlinkMacSystemFont\",\n\t\t\t'\"Segoe UI\"',\n\t\t\t\"Roboto\",\n\t\t\t'\"Helvetica Neue\"',\n\t\t\t\"Arial\",\n\t\t\t\"sans-serif\",\n\t\t\t'\"Apple Color Emoji\"',\n\t\t\t'\"Segoe UI Emoji\"',\n\t\t\t'\"Segoe UI Symbol\"'\n\t\t].join(\",\"),\n\t\t\"&:hover\": {\n\t\t\tcolor: \"#eee\",\n\t\t\topacity: 1\n\t\t},\n\t\t\"&$tabSelected\": {\n\t\t\tcolor: \"#fff\"\n\t\t},\n\t\t\"&:focus\": {\n\t\t\tcolor: \"#fff\"\n\t\t}\n\t}\n}));\n\nconst renderTab = props => {\n\tconsole.log(props);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url(${props.img})`,\n\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\tborderRadius: \"4px\",\n\t\t\t\twidth: \"160px\",\n\t\t\t\theight: \"65px\",\n\t\t\t\tmarginLeft: \"5px\",\n\t\t\t\ttextTransform: \"uppercase\",\n        padding: \"0 15px\",\n        color: \"white\"\n\t\t\t}}\n\t\t\t{...props}\n\t\t>\n\t\t\t{props.title}\n\t\t</div>\n\t);\n};\n\nexport default function CategoriesTabs(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    data: {},\n    value: 0,\n    isLess: true,\n    viewString: \"[+] View More\",\n    selectString: \"\"\n  });\n\n  React.useEffect(() => {\n    if (Object.entries(props.data).length > 0) {\n      setState({\n        ...state,\n        data: props.data.product_list,\n        selectString: props.data.category_list[0].category_name\n      });\n    }\n  }, [Object.entries(props.data).length]);\n\n  async function handleChange(event, newValue) {\n    const categoryId = event.currentTarget.id;\n    const categoryName = event.target.innerText;\n    const response = await fetch(\n      `${BaseAddress}/catalog/v1.0.1?category_id=${categoryId}`\n    );\n    response.json().then(data => {\n      setState({\n        ...state,\n        data: data,\n        value: newValue,\n        isLess: true,\n        viewString: \"[+] View More\",\n        selectString: categoryName\n      });\n    });\n  }\n\n  const changeView = () => {\n    let newView = state.isLess ? false : true;\n    let newString = state.isLess ? \"[-] View Less\" : \"[+] View More\";\n    setState({ ...state, isLess: newView, viewString: newString });\n  };\n\n  const changeCategory = (event, newValue) => {\n    handleChange(event, newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n       <Tabs\n        value={state.value}\n        onChange={handleChange}        \n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        className=\"tabs__root\"\n\t\t\t\tclasses={{\n\t\t\t\t\t\t\troot: classes.tabsRoot,\n\t\t\t\t\t\t\tindicator: classes.tabsIndicator\n\t\t\t\t\t\t}}\n      >\n        {props.data.category_list\n          ? props.data.category_list.map(value => {\n              return (\n                <Tab\n                  className={classes.tabs}\n                  key={value.category_id}\n                  id={value.category_id}\n                  component={renderTab}\n                  img={value.category_image}\n                  title={value.category_name}\n                  label={value.category_name}\n                  classes={{\n                    root: classes.tabRoot,\n                    selected: classes.tabSelected\n                  }}\n                />\n              );\n            })\n          : \"\"}\n      </Tabs>\n      {state.data.products\n        ? state.isLess\n          ? state.data.products.slice(0, 3).map(value => {\n              return <ProductList data={value} key={value.id} />;\n            })\n          : state.data.products.map(value => {\n              return <ProductList data={value} key={value.id} />;\n            })\n        : \"\"}\n      <Footer\n        changeString={state.selectString}\n        viewString={state.viewString}\n        changeView={changeView}\n        changeCategory={changeCategory}\n        category={props.data.category_list}\n      />\n    </div>\n  );\n}\n\nCategoriesTabs.propTypes = {\n  data: PropTypes.object.isRequired\n}","import React from \"react\";\nimport { BaseAddress } from \"./Environment/Environment\";\nimport CategoriesTabs from \"./Categories/CategoriesTabs\"\n\nfunction App() {\n  const [state, setState] = React.useState({});\n  React.useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        `${BaseAddress}/homemenucategories/v1.0.1?device_type=mob`\n      );\n      response.json().then(response => {\n        setState(response);\n      });\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CategoriesTabs data={state} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}